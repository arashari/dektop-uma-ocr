name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            bundle: 'deb'
          - platform: 'windows-latest'
            bundle: 'msi'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libtesseract-dev libleptonica-dev pkg-config build-essential curl wget libssl-dev libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache vcpkg (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/cache@v4
        with:
          path: |
            C:\vcpkg\installed
            C:\vcpkg\buildtrees
          key: ${{ runner.os }}-vcpkg-tesseract-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-tesseract-
            ${{ runner.os }}-vcpkg-

      - name: Install Tesseract (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          if (!(Test-Path "C:\vcpkg\installed\x64-windows-static-md\lib\tesseract*.lib")) {
            choco install vcpkg
            vcpkg integrate install
            vcpkg install tesseract:x64-windows-static-md leptonica:x64-windows-static-md
          }
          echo "VCPKG_ROOT=C:\vcpkg" >> $GITHUB_ENV
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static-md" >> $GITHUB_ENV
          echo "TESSDATA_PREFIX=C:\vcpkg\installed\x64-windows-static-md\share\tessdata" >> $GITHUB_ENV

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Uma Helper v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: false
          args: '--bundles ${{ matrix.bundle }}'